drop table if exists paid_vi;
create temp table paid_vi as
select
event_date::date as event_date,
case when acq_channel in ('gdm','gdm_men','gdm_electronics','gdm_home','gdm_makeup','gdm_kids') then 'paid' --paid
when acq_channel = 'gdm_unpaid' then 'organic' --organic
when (acq_channel ilike '%_sh%' or acq_channel = 'rip') then 'organic' --organic
when acq_channel in ('bdm','bsdm','bing','bdm_unpaid') then 'paid' --paid
when acq_channel = 'dt' then 'organic' --organic
when acq_channel = 'na' then 'organic' --organic
when acq_channel = 'ntr' then 'organic' --organic
when acq_channel in ('email','pm_em') then 'organic' --organic
when acq_channel = 'push' then 'organic' --organic
when acq_channel in ('gsdm','gsdm_posh') then 'paid' --paid
when acq_channel in ('gks','gshm') then 'organic' --organic
when acq_channel in ('fb_dpa','facebook') then 'paid' --paid
else 'Other'
end as acq_channel_group,visitor_id
from external_spark_tables.referred_visits
where event_date between '2024-03-06' and '2024-04-06'
and domain = 'us'
group by referred_visits.event_date,referred_visits.acq_channel,acq_channel_group,visitor_id
order by event_date

-- Paid Visitors , visitor id --

drop table if exists p1;
create temp table p1 as
select paid_vi.event_date,paid_vi.acq_channel_group,visitor_id as visitor
from paid_vi
where paid_vi.acq_channel_group= 'paid'
group by paid_vi.event_date,paid_vi.acq_channel_group,paid_vi.visitor_id
order by paid_vi.event_date desc,paid_vi.acq_channel_group;
select * from p1 limit 10;


drop table if exists sp_vi;
create temp table sp_vi as
select r.event_date,r.actor.id as actor,r.using.device_os_version as os_version from external_spark_tables.raw_events r
                                  where r.using.app_type = 'android' and
                                        r.verb = 'view' and
                                        --r.on.name in ('intro_join','intro_guest_join') and
                                        r.direct_object.name = 'splash' and
                                        r.actor.type in ('visitor','user') and
                                        r.using.domain = 'us' and
                                        --r.actor.id is not null and
                                        r.event_date between '2024-03-06' and '2024-04-06'

group by 1,2
order by r.event_date desc;


select * from sp_vi limit 10 ;






-- Table which contains the paid users who visited the splash page daywise --

drop table if exists spl_paid_vi;
create temp table spl_paid_vi as
    select sp_vi.event_date,
           sp_vi.os_version as os_version,
         count(distinct sp_vi.actor) as splash_paid_viewers
    from sp_vi
join p1
on sp_vi.actor = p1.visitor and sp_vi.event_date = p1.event_date
group by 1,2
order by 1 desc;

select * from spl_paid_vi order by 1 desc ,3 desc ;

---- Login page viewers
drop table if exists lg_vi;
create temp table lg_vi as
select r.event_date,r.actor.id as login_viewer,r.using.device_os_version as os_version from external_spark_tables.raw_events r
                                  where r.using.app_type = 'android' and
                                        r.verb = 'view' and
                                        --r.on.name in ('intro_join','intro_guest_join') and
                                        r.direct_object.name in ('intro_join','login') and
                                        r.actor.type in ('visitor','user') and
                                        r.using.domain = 'us' and
                                        --r.actor.id is not null and
                                        r.event_date between '2024-03-06' and '2024-04-06'

group by 1,2
order by r.event_date desc ;

-- Login Page paid viewers according to the device type channel
drop table if exists lg_paid_vi;
create temp table lg_paid_vi as
    select lg_vi.event_date,
           lg_vi.os_version as os_version,
           count(distinct lg_vi.login_viewer) as login_page_paid_viewers
    from lg_vi
join p1
on lg_vi.login_viewer = p1.visitor and lg_vi.event_date = p1.event_date
group by 1,2
order by 1 desc ,3 desc;


select * from lg_paid_vi order by 1 desc,3 desc;

--
drop table if exists lg_ci;
create temp table lg_ci as
select r.event_date,r.actor.id as login_clickers ,r.using.device_os_version as os_version from external_spark_tables.raw_events r
                                  where  r.using.app_type = 'android' and
                                        r.verb = 'click' and
                                        --r.on.name in ('intro_join','intro_guest_join') and
                                        r.on.name in ('intro_join','login') and
                                        r.actor.type in ('visitor','user') and
                                        r.using.domain = 'us' and
                                        --r.actor.id is not null and
                                        r.event_date between '2024-03-06' and '2024-04-06'

group by 1,2
order by r.event_date desc ;

select * from lg_ci limit 10 ;
--Login Page paid clickers according to the device
drop table if exists lg_paid_ci;
create temp table lg_paid_ci as
    select lg_ci.event_date,
           lg_ci.os_version as os_version,
           count(distinct lg_ci.login_clickers) as login_page_paid_clickers
    from lg_ci
join p1
on lg_ci.login_clickers = p1.visitor and lg_ci.event_date = p1.event_date
group by 1,2
order by 1 desc ,3 desc ;

select * from lg_paid_ci order by 1 desc,3 desc ;

--
drop table if exists per_lg_paid_vi ;
create temp table per_lg_paid_vi as
    select spl_paid_vi.event_date as date ,spl_paid_vi.os_version,splash_paid_viewers,login_page_paid_viewers,
           concat(round((login_page_paid_viewers)*100/splash_paid_viewers,3),'%') as percent_of_login_views
    from spl_paid_vi
join lg_paid_vi
on spl_paid_vi.event_date = lg_paid_vi.event_date and spl_paid_vi.os_version = lg_paid_vi.os_version
group by 1,2,3,4
order by 1 desc,3 desc;

select * from per_lg_paid_vi order by 1 desc,3 desc;

--
drop table if exists per_lg_paid_ci;
create temp table per_lg_paid_ci as
select lg_paid_vi.event_date as date,lg_paid_vi.os_version,lg_paid_vi.login_page_paid_viewers,lg_paid_ci.login_page_paid_clickers,
       concat(round((login_page_paid_clickers)*100/login_page_paid_viewers,3),'%') as percent_of_login_clicks
    from lg_paid_ci
join lg_paid_vi
on lg_paid_ci.event_date = lg_paid_vi.event_date and lg_paid_vi.os_version = lg_paid_ci.os_version
group by 1,2,3,4
order by 1 desc ,3 desc;

select * from per_lg_paid_ci order by 1 desc,3 desc;

--
drop table if exists final_paid_vi;
create temp table final_paid_vi as
    select per_lg_paid_vi.date as date ,per_lg_paid_vi.os_version,per_lg_paid_vi.percent_of_login_views as per_of_login_views,per_lg_paid_ci.percent_of_login_clicks as per_of_login_clicks
from per_lg_paid_vi
join per_lg_paid_ci
on per_lg_paid_vi.date = per_lg_paid_ci.date and per_lg_paid_vi.os_version = per_lg_paid_ci.os_version
group by 1,2,3,4
order by 1 desc;

select * from final_paid_vi order by 1 desc,2 desc;


select per_lg_paid_ci.date,per_lg_paid_vi.os_version,per_lg_paid_vi.splash_paid_viewers,per_lg_paid_vi.login_page_paid_viewers,per_lg_paid_ci.login_page_paid_clickers,
       per_lg_paid_vi.percent_of_login_views,per_lg_paid_ci.percent_of_login_clicks
from per_lg_paid_ci
join per_lg_paid_vi on per_lg_paid_vi.date = per_lg_paid_ci.date and per_lg_paid_vi.os_version = per_lg_paid_ci.os_version
group by 1,2,3,4,5,6,7
order by 1 desc,3 desc
